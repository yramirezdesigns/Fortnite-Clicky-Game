{"ast":null,"code":"var _jsxFileName = \"/Users/yolandaramirez/reactpractice/src/App.js\";\nimport React, { Component } from \"react\";\nimport FortniteCard from \"./components/FortniteCard\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport fortnite from \"./Fortnite.json\";\nimport \"./App.css\"; // Random shuffle\n\nfunction randomFortnite(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    var _ref = [array[j], array[i]];\n    array[i] = _ref[0];\n    array[j] = _ref[1];\n  }\n\n  return array;\n}\n\n;\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      fortnite,\n      currentScore: 0,\n      topScore: 0,\n      correctIncorrect: \"\",\n      clicked: []\n    };\n\n    this.handleClick = id => {\n      if (this.state.clicked.indexOf(id) === -1) {\n        this.handleIncrement();\n        this.setState({\n          clicked: this.state.clicked.concat(id)\n        });\n      } else {\n        this.handleReset();\n      }\n    };\n\n    this.handleIncrement = () => {\n      const newScore = this.state.currentScore + 1;\n      this.setState({\n        currentScore: newScore,\n        correctIncorrect: \"You guessed correctly!\"\n      });\n\n      if (newScore >= this.state.topScore) {\n        this.setState({\n          topScore: newScore\n        });\n      } else if (newScore === 12) {\n        this.setState({\n          correctIncorrect: \"You win!\"\n        });\n      }\n\n      this.handleShuffle();\n    };\n\n    this.handleReset = () => {\n      this.setState({\n        currentScore: 0,\n        topScore: this.state.topScore,\n        correctIncorrect: \"You guessed incorrectly!\",\n        clicked: []\n      });\n      this.handleShuffle();\n    };\n\n    this.handleShuffle = () => {\n      let shuffledFortnite = randomFortnite(fortnite);\n      this.setState({\n        fortnite: shuffledFortnite\n      });\n    };\n  }\n\n  render() {\n    return React.createElement(Wrapper, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 72\n      },\n      __self: this\n    }, React.createElement(Nav, {\n      title: \"Fortnite Clicky Game\",\n      score: this.state.currentScore,\n      topScore: this.state.topScore,\n      correctIncorrect: this.state.correctIncorrect,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 73\n      },\n      __self: this\n    }), React.createElement(Title, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 80\n      },\n      __self: this\n    }, \"Click on an image to earn points, but don't click on any more than once!\"), React.createElement(Container, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 84\n      },\n      __self: this\n    }, React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 85\n      },\n      __self: this\n    }, this.state.fortnite.map(fortnite => React.createElement(Column, {\n      size: \"md-3 sm-6\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 87\n      },\n      __self: this\n    }, React.createElement(FriendCard, {\n      key: fortnite.id,\n      handleClick: this.handleClick,\n      handleIncrement: this.handleIncrement,\n      handleReset: this.handleReset,\n      handleShuffle: this.handleShuffle,\n      id: fortnite.id,\n      image: fortnite.image,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 88\n      },\n      __self: this\n    }))))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yolandaramirez/reactpractice/src/App.js"],"names":["React","Component","FortniteCard","Nav","Wrapper","Title","Container","Row","Column","fortnite","randomFortnite","array","i","length","j","Math","floor","random","App","state","currentScore","topScore","correctIncorrect","clicked","handleClick","id","indexOf","handleIncrement","setState","concat","handleReset","newScore","handleShuffle","shuffledFortnite","render","map","image"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport FortniteCard from \"./components/FortniteCard\";\nimport Nav from \"./components/Nav\";\nimport Wrapper from \"./components/Wrapper\";\nimport Title from \"./components/Title\";\nimport Container from \"./Container\";\nimport Row from \"./Row\";\nimport Column from \"./Column\";\nimport fortnite from \"./Fortnite.json\";\nimport \"./App.css\";\n\n// Random shuffle\nfunction randomFortnite(array) {\n  for (let i = array.length - 1; i > 0; i--) {\n    let j = Math.floor(Math.random() * (i + 1));\n    [array[i], array[j]] = [array[j], array[i]];\n  }\n  return array;\n};\n\nclass App extends Component {\n  // Set this.state\n  state = {\n    fortnite,\n    currentScore: 0,\n    topScore: 0,\n    correctIncorrect: \"\",\n    clicked: [],\n  };\n\n  handleClick = id => {\n    if (this.state.clicked.indexOf(id) === -1) {\n      this.handleIncrement();\n      this.setState({ clicked: this.state.clicked.concat(id) });\n    } else {\n      this.handleReset();\n    }\n  };\n\n  handleIncrement = () => {\n    const newScore = this.state.currentScore + 1;\n    this.setState({\n      currentScore: newScore,\n      correctIncorrect: \"You guessed correctly!\" \n    });\n    if (newScore >= this.state.topScore) {\n      this.setState({ topScore: newScore });\n    }\n    else if (newScore === 12) {\n      this.setState({ correctIncorrect: \"You win!\"});\n    }\n    this.handleShuffle();\n  };\n\n  handleReset = () => {\n    this.setState({\n      currentScore: 0,\n      topScore: this.state.topScore,\n      correctIncorrect: \"You guessed incorrectly!\",\n      clicked: []\n    });\n    this.handleShuffle();\n  };\n\n  handleShuffle = () => {\n    let shuffledFortnite = randomFortnite(fortnite);\n    this.setState({ fortnite: shuffledFortnite });\n  };\n\n  render() {\n    return (\n      <Wrapper>\n        <Nav\n          title=\"Fortnite Clicky Game\"\n          score={this.state.currentScore}\n          topScore={this.state.topScore}\n          correctIncorrect={this.state.correctIncorrect}\n        />\n\n        <Title>\n          Click on an image to earn points, but don't click on any more than once!\n        </Title>\n\n        <Container>\n          <Row>\n            {this.state.fortnite.map(fortnite => (\n              <Column size=\"md-3 sm-6\">\n                <FriendCard\n                  key={fortnite.id}\n                  handleClick={this.handleClick}\n                  handleIncrement={this.handleIncrement}\n                  handleReset={this.handleReset}\n                  handleShuffle={this.handleShuffle}\n                  id={fortnite.id}\n                  image={fortnite.image}\n                />\n              </Column>\n            ))}\n          </Row>\n        </Container>\n      </Wrapper>\n    );\n  }\n}\n\nexport default App;"]},"metadata":{},"sourceType":"module"}
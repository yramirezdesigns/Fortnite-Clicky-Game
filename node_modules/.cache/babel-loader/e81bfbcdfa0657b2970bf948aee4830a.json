{"ast":null,"code":"var _jsxFileName = \"/Users/yolandaramirez/reactpractice/src/components/Navbar.js\";\nimport React from \"react\";\nimport \"../styles/Navbar.css\"; // By importing the Navbar.css file, it is added to the DOM whenever this component loads\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  navbarStyle: {\n    background: \"green\",\n    justifyContent: \"flex-end\"\n  }\n}; // We use JSX curly braces to evaluate the style object on the JSX tag\n\nfunction Navbar() {\n  return React.createElement(\"nav\", {\n    style: styles.navbarStyle,\n    className: \"navbar\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 22\n    },\n    __self: this\n  }, React.createElement(\"a\", {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 23\n    },\n    __self: this\n  }, \"Welcome\"));\n}\n\nexport default Navbar;","map":{"version":3,"sources":["/Users/yolandaramirez/reactpractice/src/components/Navbar.js"],"names":["React","styles","navbarStyle","background","justifyContent","Navbar"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP,C,CAEA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAE,OADD;AAEXC,IAAAA,cAAc,EAAE;AAFL;AADA,CAAf,C,CAOA;;AAEA,SAASC,MAAT,GAAkB;AAChB,SACE;AAAK,IAAA,KAAK,EAAEJ,MAAM,CAACC,WAAnB;AAAgC,IAAA,SAAS,EAAC,QAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAG,IAAA,IAAI,EAAC,GAAR;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD;;AAED,eAAeG,MAAf","sourcesContent":["import React from \"react\";\nimport \"../styles/Navbar.css\";\n\n// By importing the Navbar.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  navbarStyle: {\n    background: \"green\",\n    justifyContent: \"flex-end\"\n  }\n};\n\n// We use JSX curly braces to evaluate the style object on the JSX tag\n\nfunction Navbar() {\n  return (\n    <nav style={styles.navbarStyle} className=\"navbar\">\n      <a href=\"/\">Welcome</a>\n    </nav>\n  );\n}\n\nexport default Navbar;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"/Users/yolandaramirez/reactpractice/src/components/Header.js\";\nimport React from \"react\";\nimport \"../styles/Header.css\"; // By importing the Header.css file, it is added to the DOM whenever this component loads\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  headerStyle: {\n    background: \"red\"\n  },\n  headingStyle: {\n    fontSize: 100\n  }\n}; // We use JSX curly braces to evaluate the style object\n\nfunction Header() {\n  return React.createElement(\"header\", {\n    style: styles.headerStyle,\n    className: \"header\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 24\n    },\n    __self: this\n  }, React.createElement(\"h1\", {\n    style: styles.headingStyle,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, \"Welcome\"));\n}\n\nexport default Header;","map":{"version":3,"sources":["/Users/yolandaramirez/reactpractice/src/components/Header.js"],"names":["React","styles","headerStyle","background","headingStyle","fontSize","Header"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAO,sBAAP,C,CAEA;AAEA;AACA;AACA;AACA;;AAEA,MAAMC,MAAM,GAAG;AACbC,EAAAA,WAAW,EAAE;AACXC,IAAAA,UAAU,EAAE;AADD,GADA;AAIbC,EAAAA,YAAY,EAAE;AACZC,IAAAA,QAAQ,EAAE;AADE;AAJD,CAAf,C,CASA;;AAEA,SAASC,MAAT,GAAkB;AAChB,SACE;AAAQ,IAAA,KAAK,EAAEL,MAAM,CAACC,WAAtB;AAAmC,IAAA,SAAS,EAAC,QAA7C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAI,IAAA,KAAK,EAAED,MAAM,CAACG,YAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,CADF;AAKD;;AAED,eAAeE,MAAf","sourcesContent":["import React from \"react\";\nimport \"../styles/Header.css\";\n\n// By importing the Header.css file, it is added to the DOM whenever this component loads\n\n// We can also style a component inside of its JavaScript file by adding style properties to its rendered elements\n// Unlike regular HTML, a JSX style property must be an object instead of a string\n// On a style object, we camelCase all property names, and put all of the values in quotes\n// Non quoted values default to \"pixels\", e.g. height, margin, padding\n\nconst styles = {\n  headerStyle: {\n    background: \"red\"\n  },\n  headingStyle: {\n    fontSize: 100\n  }\n};\n\n// We use JSX curly braces to evaluate the style object\n\nfunction Header() {\n  return (\n    <header style={styles.headerStyle} className=\"header\">\n      <h1 style={styles.headingStyle}>Welcome</h1>\n    </header>\n  );\n}\n\nexport default Header;\n"]},"metadata":{},"sourceType":"module"}
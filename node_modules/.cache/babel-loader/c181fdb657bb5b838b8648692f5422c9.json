{"ast":null,"code":"import _objectSpread from \"/Users/yolandaramirez/reactpractice/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/yolandaramirez/reactpractice/src/App.js\";\nimport * as React from \"react\";\nimport Home from \"./pages/Home\";\nimport ThemeContext from \"./components/ThemeContext\";\nimport UserContext from \"./components/UserContext\";\nimport AlertContext from \"./components/AlertContext\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {\n        name: \"Bob\",\n        getUserToken: this.getUserToken\n      },\n      alert: {\n        display: false,\n        theme: \"success\",\n        onClick: (theme, display) => {\n          this.setState({\n            alert: _objectSpread({}, this.state.alert, {\n              theme,\n              display\n            })\n          });\n        }\n      }\n    };\n  }\n\n  getUserToken() {\n    return \"SampleToken123\";\n  }\n\n  render() {\n    // Here we are overwriting each Context Object with values from the state of App.js and a string literal.\n    return React.createElement(AlertContext.Provider, {\n      value: this.state.alert,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, React.createElement(UserContext.Provider, {\n      value: this.state.user,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, React.createElement(ThemeContext.Provider, {\n      value: \"dark\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, React.createElement(Home, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 35\n      },\n      __self: this\n    }))));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/yolandaramirez/reactpractice/src/App.js"],"names":["React","Home","ThemeContext","UserContext","AlertContext","App","Component","constructor","state","user","name","getUserToken","alert","display","theme","onClick","setState","render"],"mappings":";;AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,OAAOC,IAAP,MAAiB,cAAjB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;AACA,OAAOC,WAAP,MAAwB,0BAAxB;AACA,OAAOC,YAAP,MAAyB,2BAAzB;;AAEA,MAAMC,GAAN,SAAkBL,KAAK,CAACM,SAAxB,CAAkC;AAChCC,EAAAA,WAAW,GAAG;AACZ;AACA,SAAKC,KAAL,GAAa;AACXC,MAAAA,IAAI,EAAE;AACJC,QAAAA,IAAI,EAAE,KADF;AAEJC,QAAAA,YAAY,EAAE,KAAKA;AAFf,OADK;AAKXC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,KADJ;AAELC,QAAAA,KAAK,EAAE,SAFF;AAGLC,QAAAA,OAAO,EAAE,CAACD,KAAD,EAAQD,OAAR,KAAoB;AAC3B,eAAKG,QAAL,CAAc;AAAEJ,YAAAA,KAAK,oBAAO,KAAKJ,KAAL,CAAWI,KAAlB;AAAyBE,cAAAA,KAAzB;AAAgCD,cAAAA;AAAhC;AAAP,WAAd;AACD;AALI;AALI,KAAb;AAaD;;AAEDF,EAAAA,YAAY,GAAG;AACb,WAAO,gBAAP;AACD;;AAEDM,EAAAA,MAAM,GAAG;AACP;AACA,WACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE,KAAKT,KAAL,CAAWI,KAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAE,KAAKJ,KAAL,CAAWC,IAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,YAAD,CAAc,QAAd;AAAuB,MAAA,KAAK,EAAE,MAA9B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE,oBAAC,IAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,CADF,CADF,CADF;AASD;;AAjC+B;;AAoClC,eAAeJ,GAAf","sourcesContent":["import * as React from \"react\";\nimport Home from \"./pages/Home\";\nimport ThemeContext from \"./components/ThemeContext\";\nimport UserContext from \"./components/UserContext\";\nimport AlertContext from \"./components/AlertContext\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.state = {\n      user: {\n        name: \"Bob\",\n        getUserToken: this.getUserToken\n      },\n      alert: {\n        display: false,\n        theme: \"success\",\n        onClick: (theme, display) => {\n          this.setState({ alert: { ...this.state.alert, theme, display } });\n        }\n      }\n    };\n  }\n\n  getUserToken() {\n    return \"SampleToken123\";\n  }\n\n  render() {\n    // Here we are overwriting each Context Object with values from the state of App.js and a string literal.\n    return (\n      <AlertContext.Provider value={this.state.alert}>\n        <UserContext.Provider value={this.state.user}>\n          <ThemeContext.Provider value={\"dark\"}>\n            <Home />\n          </ThemeContext.Provider>\n        </UserContext.Provider>\n      </AlertContext.Provider>\n    );\n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"import _objectSpread from \"/Users/yolandaramirez/reactpractice/node_modules/@babel/runtime/helpers/esm/objectSpread\";\nvar _jsxFileName = \"/Users/yolandaramirez/reactpractice/src/pages/Gallery.js\";\nimport React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport UserContext from \"../utils/userContext\";\nimport CardContainer from \"../components/CardContainer\";\nimport Row from \"../components/Row\";\nimport LanguageContext from \"../utils/LanguageContext\";\nimport LanguageSelector from \"../components/LanguageSelector\";\n\nclass Gallery extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleUserBtnClick = event => {\n      // Get the title of the clicked button\n      const btnName = event.target.getAttribute(\"data-value\");\n\n      if (btnName === \"next\") {\n        const userIndex = this.state.userObject.userIndex + 1;\n        this.nextUser(userIndex);\n      } else {\n        const userIndex = this.state.userObject.userIndex - 1;\n        this.previousUser(userIndex);\n      }\n    };\n\n    this.loadUsers = language => {\n      API.getUsersByLanguage(language).then(users => {\n        return this.setState({\n          userObject: _objectSpread({}, this.state.userObject, {\n            users: users,\n            user: users[0]\n          })\n        });\n      }).catch(err => console.log(err));\n    };\n\n    this.handleLanguageBtnClick = event => {\n      // Get the title of the clicked button\n      const btnName = event.target.getAttribute(\"data-value\");\n\n      if (btnName === \"next\") {\n        const languageIndex = this.state.languageObject.languageIndex + 1;\n        this.nextLanguage(languageIndex);\n      } else {\n        const languageIndex = this.state.languageObject.languageIndex - 1;\n        this.previousLanguage(languageIndex);\n      }\n    };\n\n    this.state = {\n      languageObject: {\n        language: \"\",\n        languages: [],\n        languageIndex: 0,\n        handleBtnClick: this.handleLanguageBtnClick\n      },\n      userObject: {\n        user: \"\",\n        users: [],\n        userIndex: 0,\n        handleBtnClick: this.handleUserBtnClick,\n        capitalizeFirstLetter: this.capitalizeFirstLetter\n      }\n    };\n  } // When the component mounts, a call will be made to get random users.\n\n\n  componentDidMount() {\n    API.getLanguagesList().then(languages => {\n      this.setState({\n        languageObject: _objectSpread({}, this.state.languageObject, {\n          languages: languages,\n          language: languages[0]\n        })\n      });\n      this.loadUsers(languages[0]);\n    });\n  }\n\n  capitalizeFirstLetter(string = \"\") {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  nextUser(userIndex) {\n    // Ensure that the user index stays within our range of users\n    if (userIndex >= this.state.userObject.users.length) {\n      userIndex = 0;\n    }\n\n    this.setState({\n      userObject: _objectSpread({}, this.state.userObject, {\n        user: this.state.userObject.users[userIndex],\n        userIndex: userIndex\n      })\n    });\n  }\n\n  previousUser(userIndex) {\n    // Ensure that the user index stays within our range of users\n    if (userIndex < 0) {\n      userIndex = this.state.userObject.users.length - 1;\n    }\n\n    this.setState({\n      userObject: _objectSpread({}, this.state.userObject, {\n        user: this.state.userObject.users[userIndex],\n        userIndex: userIndex\n      })\n    });\n  }\n\n  nextLanguage(languageIndex) {\n    // Ensure that the language index stays within our range of languages\n    const languages = this.state.languageObject.languages;\n\n    if (languageIndex >= languages.length) {\n      languageIndex = 0;\n    }\n\n    this.loadUsers(languages[languageIndex]);\n    this.setState({\n      languageObject: _objectSpread({}, this.state.languageObject, {\n        language: languages[languageIndex],\n        languageIndex: languageIndex\n      })\n    });\n  }\n\n  previousLanguage(languageIndex) {\n    // Ensure that the language index stays within our range of languages\n    const languages = this.state.languageObject.languages;\n\n    if (languageIndex < 0) {\n      languageIndex = languages.length - 1;\n    }\n\n    this.loadUsers(languages[languageIndex]);\n    this.setState({\n      languageObject: _objectSpread({}, this.state.languageObject, {\n        language: languages[languageIndex],\n        languageIndex: languageIndex\n      })\n    });\n  }\n\n  render() {\n    return React.createElement(UserContext.Provider, {\n      value: this.state.userObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 146\n      },\n      __self: this\n    }, React.createElement(LanguageContext.Provider, {\n      value: this.state.languageObject,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 147\n      },\n      __self: this\n    }, React.createElement(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 148\n      },\n      __self: this\n    }, React.createElement(\"h1\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149\n      },\n      __self: this\n    }, \"Welcome to LinkedUp\"), React.createElement(\"h3\", {\n      className: \"text-center\",\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 150\n      },\n      __self: this\n    }, \"Click on the arrows to browse users\"), React.createElement(LanguageSelector, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 151\n      },\n      __self: this\n    }), React.createElement(Row, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 152\n      },\n      __self: this\n    }, React.createElement(CardContainer, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 153\n      },\n      __self: this\n    })))));\n  }\n\n}\n\nexport default Gallery;","map":{"version":3,"sources":["/Users/yolandaramirez/reactpractice/src/pages/Gallery.js"],"names":["React","Component","API","UserContext","CardContainer","Row","LanguageContext","LanguageSelector","Gallery","constructor","props","handleUserBtnClick","event","btnName","target","getAttribute","userIndex","state","userObject","nextUser","previousUser","loadUsers","language","getUsersByLanguage","then","users","setState","user","catch","err","console","log","handleLanguageBtnClick","languageIndex","languageObject","nextLanguage","previousLanguage","languages","handleBtnClick","capitalizeFirstLetter","componentDidMount","getLanguagesList","string","charAt","toUpperCase","slice","length","render"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport API from \"../utils/API\";\nimport UserContext from \"../utils/userContext\";\nimport CardContainer from \"../components/CardContainer\";\nimport Row from \"../components/Row\";\nimport LanguageContext from \"../utils/LanguageContext\";\nimport LanguageSelector from \"../components/LanguageSelector\";\n\nclass Gallery extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      languageObject: {\n        language: \"\",\n        languages: [],\n        languageIndex: 0,\n        handleBtnClick: this.handleLanguageBtnClick\n      },\n      userObject: {\n        user: \"\",\n        users: [],\n        userIndex: 0,\n        handleBtnClick: this.handleUserBtnClick,\n        capitalizeFirstLetter: this.capitalizeFirstLetter\n      }\n    };\n  }\n\n  // When the component mounts, a call will be made to get random users.\n  componentDidMount() {\n    API.getLanguagesList().then((languages) => {\n      this.setState({\n        languageObject: {\n          ...this.state.languageObject,\n          languages: languages,\n          language: languages[0]\n        }\n      });\n      this.loadUsers(languages[0]);\n    });\n  }\n\n  capitalizeFirstLetter(string = \"\") {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n  }\n\n  nextUser(userIndex) {\n    // Ensure that the user index stays within our range of users\n    if (userIndex >= this.state.userObject.users.length) {\n      userIndex = 0;\n    }\n    this.setState({\n      userObject: {\n        ...this.state.userObject,\n        user: this.state.userObject.users[userIndex],\n        userIndex: userIndex\n      }\n    });\n  }\n\n  previousUser(userIndex) {\n    // Ensure that the user index stays within our range of users\n    if (userIndex < 0) {\n      userIndex = this.state.userObject.users.length - 1;\n    }\n    this.setState({\n      userObject: {\n        ...this.state.userObject,\n        user: this.state.userObject.users[userIndex],\n        userIndex: userIndex\n      }\n    });\n  }\n\n  handleUserBtnClick = (event) => {\n    // Get the title of the clicked button\n    const btnName = event.target.getAttribute(\"data-value\");\n    if (btnName === \"next\") {\n      const userIndex = this.state.userObject.userIndex + 1;\n      this.nextUser(userIndex);\n    } else {\n      const userIndex = this.state.userObject.userIndex - 1;\n      this.previousUser(userIndex);\n    }\n  };\n\n  loadUsers = (language) => {\n    API.getUsersByLanguage(language).then((users) => {\n      return this.setState({\n        userObject: {\n          ...this.state.userObject,\n          users: users,\n          user: users[0]\n        }\n      });\n    })\n      .catch(err => console.log(err));\n  };\n\n  nextLanguage(languageIndex) {\n    // Ensure that the language index stays within our range of languages\n    const languages = this.state.languageObject.languages;\n    if (languageIndex >= languages.length) {\n      languageIndex = 0;\n    }\n    this.loadUsers(languages[languageIndex]);\n    this.setState({\n      languageObject: {\n        ...this.state.languageObject,\n        language: languages[languageIndex],\n        languageIndex: languageIndex\n      }\n    });\n  }\n\n  previousLanguage(languageIndex) {\n    // Ensure that the language index stays within our range of languages\n    const languages = this.state.languageObject.languages;\n    if (languageIndex < 0) {\n      languageIndex = languages.length - 1;\n    }\n    this.loadUsers(languages[languageIndex]);\n    this.setState({\n      languageObject: {\n        ...this.state.languageObject,\n        language: languages[languageIndex],\n        languageIndex: languageIndex\n      }\n    });\n  }\n\n  handleLanguageBtnClick = (event) => {\n    // Get the title of the clicked button\n    const btnName = event.target.getAttribute(\"data-value\");\n    if (btnName === \"next\") {\n      const languageIndex = this.state.languageObject.languageIndex + 1;\n      this.nextLanguage(languageIndex);\n    } else {\n      const languageIndex = this.state.languageObject.languageIndex - 1;\n      this.previousLanguage(languageIndex);\n    }\n  };\n\n  render() {\n    return (\n      <UserContext.Provider value={this.state.userObject}>\n        <LanguageContext.Provider value={this.state.languageObject}>\n          <div>\n            <h1 className=\"text-center\">Welcome to LinkedUp</h1>\n            <h3 className=\"text-center\">Click on the arrows to browse users</h3>\n            <LanguageSelector />\n            <Row>\n              <CardContainer />\n            </Row>\n          </div>\n        </LanguageContext.Provider>\n      </UserContext.Provider>\n    );\n  }\n}\n\nexport default Gallery;\n"]},"metadata":{},"sourceType":"module"}